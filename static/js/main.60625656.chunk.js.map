{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["Section","this","props","title","children","Component","FeedbackOptions","options","onLeaveFeedback","map","option","feedback","type","data-feedback","onClick","FeedbackBtn","Notification","message","Statistics","total","good","neutral","bad","positivePercentage","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Object","values","reduce","a","b","event","target","textContent","Math","round","countPositivePercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAaeA,E,uKATX,OACE,oCACE,6BAAKC,KAAKC,MAAMC,QACfF,KAAKC,MAAME,gB,GALEC,aCiBPC,EANS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OAdP,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUH,EAAsB,EAAtBA,gBAC/B,OACE,wBAEEI,KAAK,SACLC,gBAAeF,EACfG,QAASN,EAJX,SAMGG,GALIA,GAYPI,CAAY,CAAEJ,SAAUD,EAAQF,wBCbrBQ,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCoB3BC,E,uKAfX,OAAyB,IAArBjB,KAAKC,MAAMiB,MACN,cAAC,EAAD,CAAcF,QAAQ,sBAG7B,+BACE,wCAAWhB,KAAKC,MAAMkB,QACtB,2CAAcnB,KAAKC,MAAMmB,WACzB,uCAAUpB,KAAKC,MAAMoB,OACrB,yCAAYrB,KAAKC,MAAMiB,SACvB,sDAAyBlB,KAAKC,MAAMqB,6B,GAXnBlB,aCEnBE,EAAU,CAAC,OAAQ,UAAW,OAuDrBiB,MArDf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNL,EADM,KACAM,EADA,OAEiBD,mBAAS,GAF1B,mBAENJ,EAFM,KAEGM,EAFH,OAGSF,mBAAS,GAHlB,mBAGNH,EAHM,KAGDM,EAHC,KAsBPC,EAAqB,WACzB,OAAOC,OAAOC,OAAO,CACnBX,OACAC,UACAC,QACCU,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,IAQ7B,OACE,gCACE,cAAC,EAAD,CAAS/B,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBI,QAASA,EAASC,gBAjCjB,SAAA2B,GAEtB,OADaA,EAAMC,OAAOC,aAExB,IAAK,OACHX,EAAQN,EAAO,GACf,MACF,IAAK,UACHO,EAAWN,EAAU,GACrB,MACF,IAAK,MACHO,EAAON,EAAM,SAyBf,cAAC,EAAD,CAASnB,MAAM,aAAf,SACE,cAAC,EAAD,CACEiB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLH,MAAOU,IACPN,mBAhBwB,WAC9B,IAAMJ,EAAQU,IACd,OAAOV,EAAQmB,KAAKC,MAAOnB,EAAOD,EAAS,KAAO,EAcxBqB,WChD9BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.60625656.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass Section extends Component {\n  render() {\n    return (\n      <section>\n        <h2>{this.props.title}</h2>\n        {this.props.children}\n      </section>\n    );\n  }\n}\n\nexport default Section;\n","const FeedbackBtn = ({ feedback, onLeaveFeedback }) => {\n  return (\n    <button\n      key={feedback}\n      type=\"button\"\n      data-feedback={feedback}\n      onClick={onLeaveFeedback}\n    >\n      {feedback}\n    </button>\n  );\n};\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return options.map(option =>\n    FeedbackBtn({ feedback: option, onLeaveFeedback }),\n  );\n};\n\nexport default FeedbackOptions;\n","const Notification = ({ message }) => <p>{message}</p>;\n\nexport default Notification;\n","import { Component } from 'react';\nimport Notification from '../Notification/Notification';\n\nclass Statistics extends Component {\n  render() {\n    if (this.props.total === 0) {\n      return <Notification message=\"No feedback given\" />;\n    }\n    return (\n      <ul>\n        <li>Good: {this.props.good}</li>\n        <li>Neutral: {this.props.neutral}</li>\n        <li>Bad: {this.props.bad}</li>\n        <li>Total: {this.props.total}</li>\n        <li>Positive feedbacks: {this.props.positivePercentage}</li>\n      </ul>\n    );\n  }\n}\n\nexport default Statistics;\n","import React, { useState } from 'react';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\n\nconst options = ['good', 'neutral', 'bad'];\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = event => {\n    const type = event.target.textContent;\n    switch (type) {\n      case 'good':\n        setGood(good + 1);\n        break;\n      case 'neutral':\n        setNeutral(neutral + 1);\n        break;\n      case 'bad':\n        setBad(bad + 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return Object.values({\n      good,\n      neutral,\n      bad,\n    }).reduce((a, b) => a + b, 0);\n  };\n\n  const countPositivePercentage = () => {\n    const total = countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={options} onLeaveFeedback={onLeaveFeedback} />\n      </Section>\n      <Section title=\"Statistics\">\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positivePercentage={countPositivePercentage()}\n        />\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}